/*
    AMSKY01 INDI Weather Station Driver
    Cloud sensor, sky brightness, temperature, humidity, dew point
    
    Author: Roman Dvořák <info@astrometers.cz>
    Copyright (C) 2025 Astrometers
*/

#pragma once

#include <libindi/indiweather.h>
#include <libindi/connectionplugins/connectionserial.h>

class AMSKY01 : public INDI::Weather
{
public:
    AMSKY01();
    virtual ~AMSKY01();
    
    virtual bool initProperties() override;
    virtual bool updateProperties() override;
    virtual const char *getDefaultName() override;
    
    virtual IPState updateWeather() override;
    
protected:
    virtual void TimerHit() override;

private:
    // Connection
    Connection::Serial *serialConnection{nullptr};
    
    // Weather parameters
    INumberVectorProperty CloudDataNP;
    INumber CloudDataN[5]; // 5 cloud sensor values
    
    INumberVectorProperty LightDataNP;
    INumber LightDataN[5]; // lux, ch0, ch1, ch2, ch3
    
    // CSV parsing
    struct WeatherData {
        // Hygro data
        float temperature{0.0};
        float humidity{0.0};
        float dewPoint{0.0};
        
        // Light data
        float lux{0.0};
        int ch0{0}, ch1{0}, ch2{0}, ch3{0};
        
        // Cloud data  
        float cloud1{0.0}, cloud2{0.0}, cloud3{0.0}, cloud4{0.0}, cloud5{0.0};
        
        bool hygroValid{false};
        bool lightValid{false};
        bool cloudValid{false};
    } currentWeather;
    
    // Communication methods
    bool readSerialData();
    bool parseCSVLine(const char* line);
    bool parseHygroData(const char* data);
    bool parseLightData(const char* data);
    bool parseCloudData(const char* data);
    float calculateDewPoint(float temp, float humidity);
    
    // Helper functions
    void updateWeatherProperties();
    bool callHandshake();
};
